import dotenv from "dotenv";
import jwt from "jsonwebtoken";

dotenv.config();

/**
 * This function generates a JSON Web Token (JWT) with a given ID, name, and expiration time.
 * @param id - The user ID that will be included in the JWT payload.
 * @param name - The name of the user for whom the JWT token is being generated.
 * @param [expIn=15m] - expIn is a parameter that specifies the expiration time of the JSON Web Token
 * (JWT) generated by the function. It is an optional parameter with a default value of "15m", which
 * means the token will expire after 15 minutes. The value can be specified in seconds (e.g. "
 * @returns The function `generateJWT` returns a Promise that resolves to a JSON Web Token (JWT)
 * string. The JWT contains a payload with the `id` and `name` properties of the user, and is signed
 * using a secret key specified in the `process.env.JWT_SECRET` environment variable. The `expIn`
 * parameter specifies the expiration time of the token, with a default value of 15
 */
const generateJWT = (id, name, expIn = "15m") => {
   return new Promise((resolve, reject) => {
      const payload = { id, name };
      jwt.sign(
         payload,
         process.env.JWT_SECRET,
         {
            expiresIn: expIn,
         },
         (err, token) => {
            if (err) {
               console.log(err);
               reject("could not generate token");
            }
            resolve(token);
         }
      );
   });
};

export default generateJWT;
